// Mocks generated by Mockito 5.4.0 from annotations
// in pokedex_app/test/features/pokemon/data/repositories/pokemon_repository_impl.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex_app/core/network/network_info.dart' as _i6;
import 'package:pokedex_app/features/pokemon/data/data_sources/pokemon_local_data_source.dart'
    as _i5;
import 'package:pokedex_app/features/pokemon/data/data_sources/pokemon_remote_data_source.dart'
    as _i3;
import 'package:pokedex_app/features/pokemon/data/models/pokemon_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemonModel_0 extends _i1.SmartFake implements _i2.PokemonModel {
  _FakePokemonModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRemoteDataSource extends _i1.Mock
    implements _i3.PokemonRemoteDataSource {
  @override
  _i4.Future<_i2.PokemonModel> getConcretePokemon(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConcretePokemon,
          [query],
        ),
        returnValue: _i4.Future<_i2.PokemonModel>.value(_FakePokemonModel_0(
          this,
          Invocation.method(
            #getConcretePokemon,
            [query],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.PokemonModel>.value(_FakePokemonModel_0(
          this,
          Invocation.method(
            #getConcretePokemon,
            [query],
          ),
        )),
      ) as _i4.Future<_i2.PokemonModel>);
}

/// A class which mocks [PokemonLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonLocalDataSource extends _i1.Mock
    implements _i5.PokemonLocalDataSource {
  @override
  _i4.Future<_i2.PokemonModel> getFavoritePokemon(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavoritePokemon,
          [id],
        ),
        returnValue: _i4.Future<_i2.PokemonModel>.value(_FakePokemonModel_0(
          this,
          Invocation.method(
            #getFavoritePokemon,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.PokemonModel>.value(_FakePokemonModel_0(
          this,
          Invocation.method(
            #getFavoritePokemon,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.PokemonModel>);
  @override
  _i4.Future<List<_i2.PokemonModel>> getFavoritePokemons() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavoritePokemons,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.PokemonModel>>.value(<_i2.PokemonModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.PokemonModel>>.value(<_i2.PokemonModel>[]),
      ) as _i4.Future<List<_i2.PokemonModel>>);
  @override
  _i4.Future<void> addFavoritePokemon(_i2.PokemonModel? pokemon) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavoritePokemon,
          [pokemon],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> removeFavoritePokemon(int? id) => (super.noSuchMethod(
        Invocation.method(
          #removeFavoritePokemon,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
